---
description: 
globs: 
alwaysApply: true
---
---
tags: [Configuration, Structure, Setup, Rules Organization, Documentation]
provides: [Rules Structure, Setup Instructions, Organization Guide]
requires: [DSS Core Structure and Concepts]
---
# DSS Cursor Rules Structure Guide

## Complete Modular Organization

The DSS rules are organized into clear categories for better maintainability:

```
.cursor/rules/
├── 00-dss-core.mdc              # Core DSS concepts and structure
├── 01-dss-behavior.mdc          # Riley personality and behavior
├── workflows/                   # Individual workflow files
│   ├── 00-workflow-selection.mdc
│   ├── 01-quick-tasks.mdc
│   ├── 02-code-modification.mdc
│   ├── 03-documentation-driven.mdc
│   ├── 04-task-decomposition.mdc
│   ├── 05-documentation-refactoring.mdc
│   ├── 06-github-issues-integration.mdc
│   └── 07-development-queue.mdc
├── guidelines/                  # Guidelines and conventions
│   ├── 00-dss-templates.mdc
│   ├── 01-dss-maintenance.mdc
│   ├── 02-assistant-adherence.mdc
│   ├── 03-naming-conventions.mdc
│   ├── 04-validation-rules.mdc
│   ├── 05-tag-conventions.mdc
│   ├── 06-backlink-conventions.mdc
│   ├── 07-folder-readme-policy.mdc
│   ├── 08-github-issue-labels.mdc
│   ├── 09-error-recovery.mdc
│   └── 10-feedback-loop.mdc
├── config/                      # Configuration and reference
│   ├── structure-guide.mdc      # This file
│   └── templates/               # Reference templates (not rules)
│       ├── README.md
│       └── markdown-document-template.md
```

## ⚠️ Critical Requirements for Cursor Rules

### File Naming Requirements
- **Must use kebab-case**: `00-dss-core.mdc`, `01-dss-behavior.mdc`
- **Must have .mdc extension**: Cursor only loads .mdc files as rules
- **Sequential numbering**: Use 00-, 01-, 02- prefixes for loading order
- **Not .md**: Markdown files (.md) are NOT loaded as rules by Cursor

### Manual Cursor Configuration Required
- User must manually set each rule file to "Always included in prompts" in Cursor
- Cannot be automated - requires manual UI interaction in Cursor settings
- Each new rule file needs individual configuration

## File Descriptions

### Core Files
- **00-dss-core.mdc**: DSS folder structure, metadata system, file patterns
- **01-dss-behavior.mdc**: Riley personality, response style, team collaboration

### Workflow Files (8 workflows)
- **00-workflow-selection.mdc**: Decision tree and workflow comparison matrix
- **01-quick-tasks.mdc**: Simple, atomic tasks (1-2 files)
- **02-code-modification.mdc**: Development-focused source code changes
- **03-documentation-driven.mdc**: Documentation-first planning tasks
- **04-task-decomposition.mdc**: Complex, multi-step coordination
- **05-documentation-refactoring.mdc**: Systematic doc updates across multiple files
- **06-github-issues-integration.mdc**: Community feedback processing
- **07-development-queue.mdc**: Continuous improvement via GitHub Issues

### Guidelines Files (11 comprehensive guidelines)
- **00-dss-templates.mdc**: Template patterns and selection guidance
- **01-dss-maintenance.mdc**: Automatic maintenance behaviors and triggers
- **02-assistant-adherence.mdc**: Structured internal process for guideline adherence
- **03-naming-conventions.mdc**: LLM-optimized naming conventions for semantic discoverability
- **04-validation-rules.mdc**: Frontmatter validation rules and auto-correction
- **05-tag-conventions.mdc**: Comprehensive tagging system and categorization
- **06-backlink-conventions.mdc**: Cross-reference management and navigation
- **07-folder-readme-policy.mdc**: Consistent directory documentation standards
- **08-github-issue-labels.mdc**: GitHub issue label conventions and usage
- **09-error-recovery.mdc**: Systematic error handling and self-correction
- **10-feedback-loop.mdc**: Continuous improvement based on user feedback and installation reports

### Configuration Files
- **structure-guide.mdc**: Setup instructions and rule organization (this file)
- **templates/**: Reference templates available for file creation (not loaded as rules)

## Required Manual Setup in Cursor

**CRITICAL**: These files must be manually configured in Cursor:

1. **Open Cursor Settings** (Ctrl/Cmd + ,)
2. **Navigate to "Rules"** in the left sidebar  
3. **For each .mdc file**, click the "+ Always include in prompts" button:

#### Core Rules (Required)
- ✅ `00-dss-core.mdc`
- ✅ `01-dss-behavior.mdc`

#### Workflow Rules (Recommended - all 8 files)
- ✅ `workflows/00-workflow-selection.mdc`
- ✅ `workflows/01-quick-tasks.mdc`
- ✅ `workflows/02-code-modification.mdc`
- ✅ `workflows/03-documentation-driven.mdc`
- ✅ `workflows/04-task-decomposition.mdc`
- ✅ `workflows/05-documentation-refactoring.mdc`
- ✅ `workflows/06-github-issues-integration.mdc`
- ✅ `workflows/07-development-queue.mdc`

#### Guideline Rules (Recommended - all 11 files)
- ✅ `guidelines/00-dss-templates.mdc`
- ✅ `guidelines/01-dss-maintenance.mdc`
- ✅ `guidelines/02-assistant-adherence.mdc`
- ✅ `guidelines/03-naming-conventions.mdc`
- ✅ `guidelines/04-validation-rules.mdc`
- ✅ `guidelines/05-tag-conventions.mdc`
- ✅ `guidelines/06-backlink-conventions.mdc`
- ✅ `guidelines/07-folder-readme-policy.mdc`
- ✅ `guidelines/08-github-issue-labels.mdc`
- ✅ `guidelines/09-error-recovery.mdc`
- ✅ `guidelines/10-feedback-loop.mdc`

#### Configuration (Optional)
- ✅ `config/structure-guide.mdc`

## Benefits of This Structure

### **Complete Coverage**
- All 8 DSS workflows properly documented
- All 11 important guidelines and conventions included
- Assistant adherence process ensures consistent behavior
- Templates available for reference without cluttering rules
- Error recovery and feedback loop ensure continuous improvement

### **Focused Rules**
- Each workflow is self-contained and focused
- Guidelines are separate from execution workflows
- Templates are reference-only, not loaded as rules
- Easy to understand individual components

### **Maintainable Organization**
- Clear separation between workflows, guidelines, and configuration
- Easy to add new components without affecting existing ones
- Modular structure supports selective loading
- Version control friendly

### **Better Performance**
- Cursor loads smaller, focused rule files
- Reduced token usage vs. large consolidated files
- More efficient rule processing
- Optional components can be excluded if not needed

## Validation

To test the new rules are working:
1. Ask Riley to create a new file - should add proper DSS frontmatter
2. Ask about workflow selection - should reference the decision tree
3. Request code modification - should follow the structured process
4. Check behavior follows Riley personality and guidelines
5. Verify naming conventions are applied
6. Test GitHub issue processing awareness
7. Check backlink and cross-reference management
8. Verify error recovery and feedback collection

## Customization

You can customize by:
- **Adding new workflows**: Create new files in `workflows/`
- **Modifying guidelines**: Edit files in `guidelines/`
- **Adding templates**: Add reference files to `config/templates/`
- **Adjusting core behavior**: Modify `01-dss-behavior.mdc`

Keep `00-dss-core.mdc` stable as it defines essential DSS structure.

## Migration Notes

If migrating from old rule structure:
- Old files backed up with `.backup` extension
- Can be safely deleted once new structure is verified
- All functionality preserved and enhanced in new modular structure
- Manual Cursor configuration required for all new rule files







