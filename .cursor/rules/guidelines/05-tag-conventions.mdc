---
alwaysApply: true
---
``` yaml
---
tags: [Tags, Conventions, Metadata, Classification, Organization]
provides: [Tag Standards, Classification System, Tagging Guidelines]
requires: [DSS Core Structure and Concepts, Validation Rules]
---
```

# Tag Conventions

## Tag Structure and Format

### Basic Tag Format

Tags in DSS follow these format rules:

1. **Format in YAML frontmatter**: `tags: [tag1, tag2, tag3]`
2. **Lowercase with underscores**: Use `snake_case` for multi-word tags (e.g., `task_management`)
3. **No special characters**: Avoid symbols except underscores
4. **No spaces**: Use underscores instead of spaces
5. **No # prefix**: DSS tags do not use hashtag prefixes in YAML frontmatter

## Tag Categories

### 1. File Type Tags

- `docs` - Documentation files
- `code` - Source code files
- `meta` - Project metadata files
- `dataset` - Data files
- `template` - Template files

### 2. Purpose Tags

- `guide` - How-to guides and tutorials
- `reference` - Reference documentation
- `project_management` - Planning and management documents
- `task_breakdown` - Task decomposition documents
- `assistant_workflow` - Assistant workflow definitions
- `assistant_guidelines` - Guidelines for assistant behavior

### 3. Status Tags

- `draft` - Initial or incomplete content
- `review` - Ready for review
- `approved` - Approved content
- `archived` - Historical content no longer actively maintained

### 4. Topic Tags

- `ai_interaction` - AI-related topics
- `development` - Development processes
- `task_management` - Task management and organization

## Task Decomposition Tagging

### Required Tags

Every task decomposition document should include:

```yaml
tags: [task_breakdown, project_management]
```

### Additional Recommended Tags

- `frontend` - For frontend development tasks
- `backend` - For backend development tasks
- `data_processing` - For data-related tasks
- `documentation` - For documentation tasks
- `infrastructure` - For infrastructure or DevOps tasks
- `research` - For research-oriented tasks

### In-Text Task Tagging

Within task decomposition documents, use inline tags for subtasks:

```markdown
#### 1.1. Research Component Implementation `[NOT STARTED]` #research #frontend
```

## Recommended Task-Related Tags

| Tag | Usage |
|-----|-------|
| `task_breakdown` | Main tag for all task decomposition documents |
| `project_management` | For project planning and management documents |
| `milestone` | For tasks associated with project milestones |
| `phase1`, `phase2`, etc. | For tasks associated with specific project phases |
| `high_priority` | For tasks requiring immediate attention |
| `blocker` | For tasks that are blocking other work |
| `quick_win` | For low-effort, high-value tasks |
| `technical_debt` | For tasks addressing technical debt |
| `enhancement` | For feature enhancement tasks |
| `bugfix` | For bug-fixing tasks |
| `refactoring` | For code restructuring tasks |
| `testing` | For testing-related tasks |
| `documentation` | For documentation tasks |
| `automation` | For tasks related to workflow automation |

## Tag Usage Guidelines

1. **Be Consistent**: Use the same tags for similar content across the repository
2. **Be Specific**: Choose specific tags that accurately reflect the content
3. **Be Concise**: Limit to 3-5 tags per document to maintain focus
4. **Be Hierarchical**: Use both general and specific tags when appropriate
5. **Tag for Discoverability**: Consider how users might search for or filter content

## Task Status vs. Tags

- **Status markers** use format `[STATUS]` (e.g., `[NOT STARTED]`, `[IN PROGRESS]`) for current state
- **Tags** use format `#tag` when inline or in YAML frontmatter for categories/classification
